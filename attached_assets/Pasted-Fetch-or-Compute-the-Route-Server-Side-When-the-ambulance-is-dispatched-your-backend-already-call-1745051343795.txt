Fetch or Compute the Route Server‑Side
– When the ambulance is dispatched, your backend already calls your routing service (e.g. OSRM) to get the fastest path. Serialize that as either a GeoJSON LineString or a Mapbox‑style polyline string and broadcast it alongside the ambulance’s live position over your WebSocket.

Expose the Route in Your WebSocket Message
– Add a new field, say routeGeometry, to your "ambulance_alert" or "position" messages:

js
Copy
Edit
{
  type: "ambulance_alert",
  position: { lat, lng },
  eta, 
  routeGeometry: "<encoded‑polyline‑or‑GeoJSON>",
  …
}
– That way all clients automatically get the full path when the alert first fires.

Parse & Store on the Client
– In your React hook (e.g. useRoute or directly in CarUserPage), when you receive the WS message, decode routeGeometry into an array of [lat, lng] points. You can reuse your existing parseGeoJSON or polyline.decode helpers.

Draw a Polyline Overlay on the Map
– In your MapContainer (or CarUserMapContainer), add a new useEffect that watches for ambulanceRoute state. When it appears:

ts
Copy
Edit
const layer = L.polyline(ambulanceRoute, { color: 'red', weight: 4, dashArray: '6,4' })
layer.addTo(mapRef.current)
return () => mapRef.current?.removeLayer(layer)
– Optionally animate a small “blip” marker moving along that same array as you update position.

UI/UX Touches

Toggle Visibility: give users a “Show route” button in your header so the map doesn’t get too cluttered.

Highlight ETA & Distance: on hover or click of the polyline, pop up a tooltip showing “ETA: 2 min” or “3.2 km away.”

Color‑Code: maybe green for the first half of the route, yellow as the ambulance nears, red when it’s within 100 m.

Keep It Real‑Time

Every time you get a WebSocket “position” update, simply move the ambulance marker—no need to recompute the entire route, unless rerouting is needed for traffic changes.

If you do want live rerouting, trigger a quick backend re‑compute every N seconds (or when the ambulance deviates).

By layering a simple L.polyline on top of your Leaflet map and wiring it up to the same WebSocket stream you already use for location, you’ll give users an immediate, intuitive picture of where that siren‑blaring vehicle is coming from and how to get out of its way.








